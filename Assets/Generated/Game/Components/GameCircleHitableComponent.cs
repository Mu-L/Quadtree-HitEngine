//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CircleHitableComponent circleHitable { get { return (CircleHitableComponent)GetComponent(GameComponentsLookup.CircleHitable); } }
    public bool hasCircleHitable { get { return HasComponent(GameComponentsLookup.CircleHitable); } }

    public void AddCircleHitable(float newRadius) {
        var index = GameComponentsLookup.CircleHitable;
        var component = (CircleHitableComponent)CreateComponent(index, typeof(CircleHitableComponent));
        component.radius = newRadius;
        AddComponent(index, component);
    }

    public void ReplaceCircleHitable(float newRadius) {
        var index = GameComponentsLookup.CircleHitable;
        var component = (CircleHitableComponent)CreateComponent(index, typeof(CircleHitableComponent));
        component.radius = newRadius;
        ReplaceComponent(index, component);
    }

    public void RemoveCircleHitable() {
        RemoveComponent(GameComponentsLookup.CircleHitable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCircleHitable;

    public static Entitas.IMatcher<GameEntity> CircleHitable {
        get {
            if (_matcherCircleHitable == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CircleHitable);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCircleHitable = matcher;
            }

            return _matcherCircleHitable;
        }
    }
}
