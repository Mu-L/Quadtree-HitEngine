//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity quadtreeEntity { get { return GetGroup(GameMatcher.Quadtree).GetSingleEntity(); } }
    public QuadtreeComponent quadtree { get { return quadtreeEntity.quadtree; } }
    public bool hasQuadtree { get { return quadtreeEntity != null; } }

    public GameEntity SetQuadtree(Quadtree newRoot) {
        if (hasQuadtree) {
            throw new Entitas.EntitasException("Could not set Quadtree!\n" + this + " already has an entity with QuadtreeComponent!",
                "You should check if the context already has a quadtreeEntity before setting it or use context.ReplaceQuadtree().");
        }
        var entity = CreateEntity();
        entity.AddQuadtree(newRoot);
        return entity;
    }

    public void ReplaceQuadtree(Quadtree newRoot) {
        var entity = quadtreeEntity;
        if (entity == null) {
            entity = SetQuadtree(newRoot);
        } else {
            entity.ReplaceQuadtree(newRoot);
        }
    }

    public void RemoveQuadtree() {
        quadtreeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public QuadtreeComponent quadtree { get { return (QuadtreeComponent)GetComponent(GameComponentsLookup.Quadtree); } }
    public bool hasQuadtree { get { return HasComponent(GameComponentsLookup.Quadtree); } }

    public void AddQuadtree(Quadtree newRoot) {
        var index = GameComponentsLookup.Quadtree;
        var component = (QuadtreeComponent)CreateComponent(index, typeof(QuadtreeComponent));
        component.root = newRoot;
        AddComponent(index, component);
    }

    public void ReplaceQuadtree(Quadtree newRoot) {
        var index = GameComponentsLookup.Quadtree;
        var component = (QuadtreeComponent)CreateComponent(index, typeof(QuadtreeComponent));
        component.root = newRoot;
        ReplaceComponent(index, component);
    }

    public void RemoveQuadtree() {
        RemoveComponent(GameComponentsLookup.Quadtree);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherQuadtree;

    public static Entitas.IMatcher<GameEntity> Quadtree {
        get {
            if (_matcherQuadtree == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Quadtree);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherQuadtree = matcher;
            }

            return _matcherQuadtree;
        }
    }
}
