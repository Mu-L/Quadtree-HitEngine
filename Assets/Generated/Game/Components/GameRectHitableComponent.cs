//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HitEngine.Entitas.RectHitableComponent rectHitable { get { return (HitEngine.Entitas.RectHitableComponent)GetComponent(GameComponentsLookup.RectHitable); } }
    public bool hasRectHitable { get { return HasComponent(GameComponentsLookup.RectHitable); } }

    public void AddRectHitable(float newHeight, float newLength) {
        var index = GameComponentsLookup.RectHitable;
        var component = (HitEngine.Entitas.RectHitableComponent)CreateComponent(index, typeof(HitEngine.Entitas.RectHitableComponent));
        component.height = newHeight;
        component.length = newLength;
        AddComponent(index, component);
    }

    public void ReplaceRectHitable(float newHeight, float newLength) {
        var index = GameComponentsLookup.RectHitable;
        var component = (HitEngine.Entitas.RectHitableComponent)CreateComponent(index, typeof(HitEngine.Entitas.RectHitableComponent));
        component.height = newHeight;
        component.length = newLength;
        ReplaceComponent(index, component);
    }

    public void RemoveRectHitable() {
        RemoveComponent(GameComponentsLookup.RectHitable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRectHitable;

    public static Entitas.IMatcher<GameEntity> RectHitable {
        get {
            if (_matcherRectHitable == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RectHitable);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRectHitable = matcher;
            }

            return _matcherRectHitable;
        }
    }
}
